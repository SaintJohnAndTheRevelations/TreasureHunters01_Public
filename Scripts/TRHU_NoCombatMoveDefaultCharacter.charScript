#INCLUDE Base
INIT
	USING SHARED Base
	CHARACTER:__Me
	CHARACTER:%DialogLookAtChar=null
	FLOAT3:%PeaceReturnPosition=null
	EXTERN INT:%bool_CanCower=0
	EXTERN INT:%bool_CanFleeWhileCowering=0
	EXTERN INT:%bool_CombatFallbackAD=0
	INT:%EvaluateScores=0
	EXTERN FIXEDSTRING:%AiHint=null
	EXTERN INT:%StayInAiHints=0
	EXTERN ARCHETYPE:%Archetype=base
	INT:%InvisibleDialog=0
	INT:%CanUseMeleeAttack=0
	INT:%TookDamage=0
	LIST<TRIGGER>:%AIHintTriggers
	INT:%OnInitOnlyOnce = 1
	INT:%FallbackInstanceId = null
	INT:%VisibleCharactersInCombat = 0
EVENTS

EVENT CrimeSensibleActionFallback
VARS
	CHARACTER:_Criminal1
	CHARACTER:_Criminal2
	CHARACTER:_Criminal3
	CHARACTER:_Criminal4
	INT:_CrimeID
	FIXEDSTRING:_CrimeVar
ON
	OnCrimeSensibleAction(_,_CrimeID,_,_,_Criminal1,_Criminal2,_Criminal3,_Criminal4,_)
ACTIONS
	IF "!c1"
		GetVar(_CrimeVar,__Me,"PreviousSensibleAction")
	THEN
		ConfrontationDone(_CrimeID,__Me,_Criminal1,_Criminal2,_Criminal3,_Criminal4)
	ENDIF

EVENT InitChar
ON
	OnInit()
ACTIONS
	IF "!c1"
		IsEqual(%Archetype,null)
	THEN
		CharacterSetArchetype(__Me,%Archetype)
		Set(%Archetype,null)
	ENDIF

	IF "c1"
		IsEqual(%OnInitOnlyOnce,0)
	THEN
		IF "c1|c2|c3"
			IsTagged(__Me,"MAGISTER")
			IsTagged(__Me,"PALADIN")
			IsTagged(__Me,"GUARD")
		THEN
			Set(%bool_CanCower,0)
			Set(%bool_CanFleeWhileCowering,0)
		ENDIF
		Set(%OnInitOnlyOnce,1)
	ENDIF

EVENT StartCombatFetchPos
ON
	OnEnteredCombat(__Me, _)
ACTIONS
	CharacterSetEnemy(__Me,null)
	IF "c1"
		IsEqual(%PeaceReturnPosition,null)
	THEN
		GetPosition(__Me,%PeaceReturnPosition)
		CharacterForceUpdate(1)
	ENDIF
	IF "c1"
		CharacterHasStatus(__Me,SITTING)
	THEN
		CharacterRemoveStatus(__Me,SITTING)
	ENDIF

EVENT ReturnToPosOnCombatEnded
ON
	OnLeftCombat(__Me, _)
ACTIONS
	IF "c1|c2|c3"
		CharacterIsInParty(__Me)
		CharacterIsDead(__Me)
		IsInGameMasterMode()
	THEN
		CharacterEvent(__Me,"ClearPeaceReturn")
	ELIF "!c1"
		HasFlag(__Me, "GLO_BlockRegenAfterCombat")
	THEN
		StartTimer("Regen", 3.0, 0)
	ENDIF

EVENT PreventRegenOnFightReenter
ON
	OnEnteredCombat(__Me, _)
ACTIONS
	StopTimer("Regen")

EVENT Update
ON
	OnTimer("Regen")
ACTIONS
	IF "!c1&!c2"
		IsInCombat(__Me)
		HasFlag(__Me, "GLO_BlockRegenAfterCombat")
	THEN
		SetHealth(__Me,1)
	ENDIF

EVENT RestoreHealth
ON
	OnCharacterFlagCleared("GLO_BlockRegenAfterCombat",__Me)
ACTIONS
	StartTimer("Regen", 0.0, 0)

EVENT StoryOverridePeaceReturn
ON
	OnStoryOverride()
	OnCharacterOffStageChanged(__Me, _)
	OnCharacterEvent(__Me,"ClearPeaceReturn")
ACTIONS
	IF "!c1"
		IsEqual(%PeaceReturnPosition,null)
	THEN
		Set(%PeaceReturnPosition,null)
		Interrupt("ReturnToPeacePosition")
		CharacterForceUpdate(0)
	ENDIF

EVENT StartEvaluateScore
ON
	OnFunction("StartEvaluateScore")
ACTIONS
	IF "c1&c2&!c3"
		IsEqual(%EvaluateScores,0)
		IsInActiveTurn(__Me)
		CharacterAiIsCalculating()
	THEN
		Set(%EvaluateScores,1)
		CharacterAiCalculate()
	ENDIF

EVENT CalculationAIDone
ON
	OnFinishCalculationAi()
ACTIONS
	Set(%EvaluateScores,0)

EVENT StopEvaluateScore
ON
	OnFunction("StopEvaluateScore")
ACTIONS
	IF "c1"
		IsEqual(%EvaluateScores,1)
	THEN
		Set(%EvaluateScores,0)
		CharacterAiStopCalculate()
	ENDIF

EVENT ForceNewEnemyWhenCharmed
ON
	OnCharacterStatusApplied(__Me,CHARMED)
ACTIONS
	CharacterSetEnemy(__Me,null)

EVENT EvaluateTargets
ON
	OnTurn(__Me, _)
ACTIONS
	CallFunction("StartEvaluateScore")

EVENT OnTurnEnd
ON
	OnTurnEnded(__Me, _)
	OnLeftCombat(__Me, _)
ACTIONS
	CallFunction("StopEvaluateScore")
	Set(%TookDamage, 0)

EVENT StartedInvisibleTurn
ON
	OnTurn(__Me, _)
ACTIONS
	IF "c1"
		CharacterHasStatus(__Me, INVISIBLE)
	THEN
		Set(%InvisibleDialog, 0)
		IterateParty("GLO_InvisibleTurnStart", Lowest, Distance)
	ENDIF

EVENT IteratePlayersWhileInvisible
VARS
CHARACTER:_Player
ON
	OnIterateCharacter(_Player, "GLO_InvisibleTurnStart")
ACTIONS
	IF "c1&c2&!c3&!c4&c5&!c6&!c7&c8&!c9&!c10&!c11&!c12&!c13&!c14&!c15&!c16"
		IsInCombatWith(_Player, __Me)			//c1
		CharacterIsEnemy(_Player, __Me)			//c2
		CharacterIsDead(_Player,0)				//!c3
		IsInDialog(_Player)						//!c4
		IsEqual(%InvisibleDialog, 0)			//c5
		CharacterHasStatus(_Player, INVISIBLE)	//!c6
		CharacterHasStatus(_Player, SNEAKING)	//!c7
		CharacterIsPlayer(_Player)				//c8
		CharacterIsSummon(_Player)				//!c9
		CharacterIsPolymorphInteractionDisabled(_Player) //!c10
		CharacterIsPartyFollower(_Player)		//!c11
		CharacterHasStatus(_Player, KNOCKED_DOWN) //!c12
		CharacterHasStatus(_Player, FROZEN) //!c13
		CharacterHasStatus(_Player, PETRIFIED) //!c14
		CharacterHasStatus(_Player, STUNNED) //!c15
		CharacterHasStatus(_Player, SLEEPING) //!c16
	THEN
		Set(%InvisibleDialog, 1)
		DialogStart(_, "CMB_AD_Comment_InvisibleEnemyTurn", _Player)
	ENDIF

EVENT ReceivedDamage
VARS
	CHARACTER:_Source
ON
	OnDamage(_, _, _Source, _)
ACTIONS
	IF "!c1"
		IsEqual(__Me, _Source)
	THEN
		Add(%TookDamage, 1)
	ENDIF

EVENT FallbackDialogDone
ON
	OnAutomatedDialogEnded(_,%FallbackInstanceId)
	OnTimer("FallbackDialogTimer")
ACTIONS
	Set(%FallbackInstanceId,null)
	StopTimer("FallbackDialogTimer")
	EndTurn(__Me)
	
EVENT FindVisibleCharactersInCombat
VARS
	CHARACTER:_Char
ON
	OnIterateCharacter(_Char, "FindVisibleCharactersInCombat")
ACTIONS
	IF "!c1&c2&!c3"
		IsEqual(_Char, __Me)
		CharacterIsEnemy(__Me, _Char)
		CharacterHasStatus(_Char, INVISIBLE)
	THEN
		Add(%VisibleCharactersInCombat, 1)
	ENDIF

//---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
BEHAVIOUR


/////////////////////////////////////////////////////////////////////////////////////////////
/// Combat AI
REACTION Combat_AI_Waiting,60 //Waiting while the AI is still calculating or for the fallback dialog to end.
USAGE COMBAT
CHECK "c1|!c2"
	CharacterAiIsCalculating()
	IsEqual(%FallbackInstanceId,null)
ACTIONS
	Sleep(0.1)


REACTION Combat_AI_CastSkill,50
USAGE COMBAT
VARS
	SKILL:_Skill
	ITEM:_SkillItem
	FLOAT3:_EndPosition
	FLOAT3:_TargetPos1
	CHARACTER:_TargetCharacter1
	ITEM:_TargetItem1
	FLOAT3:_TargetPos2
	CHARACTER:_TargetCharacter2
	ITEM:_TargetItem2
CHECK "c1"
	CharacterAiFetchSkillCommand(_Skill,_SkillItem,_EndPosition,_TargetPos1,_TargetCharacter1,_TargetItem1,_TargetPos2,_TargetCharacter2,_TargetItem2)
ACTIONS
	CallFunction("StopEvaluateScore")
	DebugText(__Me,"[GOING TO CAST [1] from [2]",_Skill,_SkillItem)
	CharacterAiMove(_EndPosition, _TargetCharacter1, _TargetItem1)
	////////////////////////////////////////////////////////////////////////////////////////////////////
	// Check if we can still cast the skill
	IF "!c1"
		CharacterCanCast(__Me,_Skill,_SkillItem)
	THEN
		Sleep(0.5)
		IF "!c1&c2"
			IsEqual(_TargetCharacter1,null)
			CanSee(__Me,_TargetCharacter1)
		THEN
			CharacterLookAt(_TargetCharacter1)
		ELIF "!c1"
			IsEqual(_TargetItem1,null)
		THEN
			CharacterLookAt(_TargetItem1)
		ELIF "!c1"
			IsEqual(_TargetPos1,null)
		THEN
			CharacterLookAt(_TargetPos1)
		ENDIF

		IF "!c1"
			CharacterHasStatus(__Me, INVISIBLE)
		THEN
			CharacterPlayEffect(__Me, "RS3_FX_UI_Icon_SkipTurn_01", "Dummy_OverheadFX")
		ENDIF
		Sleep(0.5)
		EndTurn(__Me)
		Goto(End)
	ENDIF
	////////////////////////////////////////////////////////////////////////////////////////////////////
	// Cast the Skill
	IF "!c1"
		IsEqual(_TargetPos1,null)
	THEN
		IF "!c1"
			IsEqual(_TargetPos2,null)
		THEN
			CharacterUseSkill("Quake_EnemyEarthquake",_TargetPos1,_TargetPos2,_SkillItem)
		ELIF "!c1"
			IsEqual(_TargetCharacter2,null)
		THEN
			CharacterUseSkill("Quake_EnemyEarthquake",_TargetPos1,_TargetCharacter2,_SkillItem)
		ELIF "!c1"
			IsEqual(_TargetItem2,null)
		THEN
			CharacterUseSkill("Quake_EnemyEarthquake",_TargetPos1,_TargetItem2,_SkillItem)
		ELSE
			CharacterUseSkill("Quake_EnemyEarthquake",_TargetPos1,CHARACTER:null,_SkillItem)
		ENDIF
	ELIF "!c1"
		IsEqual(_TargetCharacter1,null)
	THEN
		IF "!c1"
			IsEqual(_TargetPos2,null)
		THEN
			CharacterUseSkill("Quake_EnemyEarthquake",_TargetCharacter1,_TargetPos2,_SkillItem)
		ELIF "!c1"
			IsEqual(_TargetCharacter2,null)
		THEN
			CharacterUseSkill("Quake_EnemyEarthquake",_TargetCharacter1,_TargetCharacter2,_SkillItem)
		ELIF "!c1"
			IsEqual(_TargetItem2,null)
		THEN
			CharacterUseSkill("Quake_EnemyEarthquake",_TargetCharacter1,_TargetItem2,_SkillItem)
		ELSE
			CharacterUseSkill("Quake_EnemyEarthquake",_TargetCharacter1,CHARACTER:null,_SkillItem)
		ENDIF
	ELIF "!c1"
		IsEqual(_TargetItem1,null)
	THEN
		IF "!c1"
			IsEqual(_TargetPos2,null)
		THEN
			CharacterUseSkill("Quake_EnemyEarthquake",_TargetItem1,_TargetPos2,_SkillItem)
		ELIF "!c1"
			IsEqual(_TargetCharacter2,null)
		THEN
			CharacterUseSkill("Quake_EnemyEarthquake",_TargetItem1,_TargetCharacter2,_SkillItem)
		ELIF "!c1"
			IsEqual(_TargetItem2,null)
		THEN
			CharacterUseSkill("Quake_EnemyEarthquake",_TargetItem1,_TargetItem2,_SkillItem)
		ELSE
			CharacterUseSkill("Quake_EnemyEarthquake",_TargetItem1,CHARACTER:null,_SkillItem)
		ENDIF
	ENDIF
	CallFunction("StartEvaluateScore")
INTERRUPT
ON
	OnMovementFailed(_)
ACTIONS
	DebugText(__Me,"MOVE FAILED casting [1] on [2],[3],[4]",_Skill,_TargetCharacter1,_TargetItem1,_TargetPos1)
INTERRUPT
ACTIONS
	Reset()
	CallFunction("StartEvaluateScore")


